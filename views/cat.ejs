<html>
	<head>
		<title>Training a neural network to paint an image - Synaptic</title>
		<link rel="icon" type="image/png" href="img/favicon.png">
		<meta charset="UTF-8">
		<meta name="description" content="Training a neural network to paint an image - Synaptic">
		<meta name="keywords" content="javascript,node.js,neural networks,lstm,long short term memory,library,synaptic">
		<meta name="author" content="Juan Cazala">
		<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
		<script src='/javascripts/synaptic.js'></script>
		<style>
			body { 
				font-family: 'Open Sans', sans-serif;
				position: relative;
				line-height: 120%;
				margin: 0px;
			}
			.container {
				width: 1024px;
				margin: 0 auto;
			}
			.title {
				text-align: center;
				color: rgb(125, 125, 125);
				font-size: 34px;
				padding-top: 50px;
				height: 50px;
				cursor: pointer;
			}
			.title b{
				color:rgb(50, 50, 50);;
			}
			.title:hover{
				opacity: .8;
			}
			.subtitle: {
				font-weight: bold;
			}

			p {
				padding: 10px;
				font-size: 13px;
			}
			a{
				color: black;
				font-weight: bold;
			}
			.image_frame img, canvas {
				border: 1px solid lightgray;
				box-shadow: 0 0 10px lightgray;
				padding: 2px;
				margin-right: 10px;
				margin-bottom: 10px;
				display: block;
			}

			.image_frame {
				display: inline-block;
				text-align: center;
				font-size: 12px;
			}

			.train {
				display: none;
			}
		</style>
		<script>

			var perceptron = null;
			var liquidint = null;
			var worker = null;
			var index = 0;
			var twitter_data = null;
			var canvas = null;
			var context = null;
			var size = 125 * 125;
			var iteration = 0;
			var to = null;

			var getData = function(imageObj){

				canvas = canvas || document.getElementById('canvas');
		        context = context || canvas.getContext('2d');

		        context.drawImage(imageObj, 0, 0);

		        var imageData = context.getImageData(0, 0, 125, 125);
		        return imageData.data;
			}

			var train = function(){
				iteration = 0;
				to && clearTimeout(to);

				var input = 2;
				var pool = 20;
				var output = 3;
				var connections = 30;
				var gates = 10;

				perceptron = new Architect.Liquid(input, pool*4, output, connections*4, gates*4);


				//perceptron = new Architect.LSTM(2,14,3);
		        twitter_data = getData(document.getElementById('twitter'));
		        $(".train").show();
				preview();
			}

			var iterate = function(){
				
				for (var x = 0; x < 125; x+=1)
				{
					for(var y = 0; y < 125; y+=1)
					{
						//px = pixel(twitter,x,y)
						perceptron.activate([x/125,y/125]);
						perceptron.propagate(.2, pixel(twitter_data,x,y));
					}
				}
				preview();
			}

			var pixel = function(data,x,y){

				var red = data[((125 * y) + x) * 4];
		        var green = data[((125 * y) + x) * 4 + 1];
		        var blue = data[((125 * y) + x) * 4 + 2];

		        return [red / 255, green / 255, blue / 255];
			}

			var preview = function(){
				$("#log").html("Iterations: " + iteration++);
				var imageData = context.getImageData(0, 0, 125, 125);
				for (var x = 0; x < 125; x++)
				{
					for(var y = 0; y < 125; y++)
					{
						var rgb = perceptron.activate([x/125,y/125]);
						imageData.data[((125 * y) + x) * 4] = (rgb[0] )* 255;
						imageData.data[((125 * y) + x) * 4 + 1] = (rgb[1] ) * 255;
						imageData.data[((125 * y) + x) * 4 + 2] = (rgb[2] ) * 255;
					}
				}
				context.putImageData(imageData,0,0);
				to = setTimeout(iterate,16);
			}

		</script>
		<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-54879338-2', 'auto');
  ga('send', 'pageview');

</script>
	</head>
	<body>
		<a href="https://github.com/cazala/synaptic"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>
		<div class="container"><div class='title' onclick="window.location='index.html';"><b>Synaptic</b></div><div style="font-weight: bold;">Paint an Image</div>
		<p> In this demo, a <a href='http://en.wikipedia.org/wiki/Long_short_term_memory'>Long Short Term Memory</a> network (2 inputs, 14 memory blocks, 3 outputs) will be trained entering the coordinates of every pixel (x, y) of an image as input, and the color as ouput (RGB values). After each iteration, the network will be directed to fill a canvas, the coordinates of every pixel will be provided and the canvas will be painted with the RGB values outputed by the network.</p>
		<p> Start training: <button onclick="train();">START</button></p><p id="log" class="log"></p>
		<div class="train">
		<div class="image_frame"><img src='/images/cat.png' id='twitter'/><span>original</span></div>
		<div class="image_frame"><canvas id='canvas' width =125 height=125></canvas><span>painted</span></div>
		<p>It may take a few thousand iterations for the painted image to start looking like the original, this is an example after 5000 iterations:</p>
		<div class="image_frame" style="text-align: center;"><img src='img/twitter_painted.png'/></div>
		</div>
	</div>
	</body>
</html>